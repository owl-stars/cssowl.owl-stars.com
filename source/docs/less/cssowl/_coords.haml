%h3#cssowl-coords cssowl-coords

:markdown
  Set an element's `top`, `right`, `bottom` and `left` properties.

.panel.panel-default
  .panel-heading
    = link_to 'Source', '#source-cssowl-coords', data: {toggle: 'collapse'}

  #source-cssowl-coords.panel-body.panel-collapse.collapse
    %ul.nav.nav-tabs
      %li.active
        = link_to 'SASS', '#source-cssowl-coords-sass'
      %li
        = link_to 'SCSS', '#source-cssowl-coords-scss'
      %li
        = link_to 'LESS', '#source-cssowl-coords-less'
      %li
        = link_to 'Stylus', '#source-cssowl-coords-styl'

    .tab-content
      #source-cssowl-coords-sass.tab-pane.active
        = preserve do
          -code("sass") do
            :plain
              =cssowl-coords($coords:0 false false 0)
                $top: nth($coords, 1)
                $right: nth($coords, 2)
                $bottom: nth($coords, 3)
                $left: nth($coords, 4)
                @if $top != false
                  top: $top
                @if $left != false
                  left: $left
                @if $right != false
                  right: $right
                @if $bottom != false
                  bottom: $bottom
      #source-cssowl-coords-scss.tab-pane
        = preserve do
          -code("scss") do
            :plain
              @mixin cssowl-coords($coords:0 false false 0) {
                $top: nth($coords, 1);
                $right: nth($coords, 2);
                $bottom: nth($coords, 3);
                $left: nth($coords, 4);
                @if $top != false {
                  top: $top;
                }
                @if $left != false {
                  left: $left;
                }
                @if $right != false {
                  right: $right;
                }
                @if $bottom != false {
                  bottom: $bottom;
                }
              }
      #source-cssowl-coords-less.tab-pane
        = preserve do
          -code("scss") do
            :plain
              .cssowl-coords(@coords:0 false false 0) when not (extract(@coords, 1) = false) {
                top: extract(@coords, 1);
              }
              .cssowl-coords(@coords:0 false false 0) when not (extract(@coords, 2) = false) {
                right: extract(@coords, 2);
              }
              .cssowl-coords(@coords:0 false false 0) when not (extract(@coords, 3) = false) {
                bottom: extract(@coords, 3);
              }
              .cssowl-coords(@coords:0 false false 0) when not (extract(@coords, 4) = false) {
                left: extract(@coords, 4);
              }
              .cssowl-coords(@coords:0 false false 0) {
                // see conditionals
              }
      #source-cssowl-coords-styl.tab-pane
        = preserve do
          -code("sass") do
            :plain
              cssowl-coords($coords=0 false false 0)
                $top = $coords[0];
                $right = $coords[1];
                $bottom = $coords[2];
                $left = $coords[3];
                if $top != false
                  top $top
                if $left != false
                  left $left
                if $right != false
                  right $right
                if $bottom != false
                  bottom $bottom


.panel.panel-default
  .panel-heading
    = link_to 'Examples', '#examples-cssowl-coords', data: {toggle: 'collapse'}

  #examples-cssowl-coords.panel-body.panel-collapse.collapse.in.bs-docs-example

    .content
      .wrapper{style:"position:relative;width:50px;height:50px;border:1px solid #59371f;"}
        .example-coords{style: "width:10px;height:10px;background:#59371f;position:absolute;"}

      :sass
        $sprite-sheet-image: url("/assets/img/site/sprite.png")
        $sprite-sheet-image-2x: url("/assets/img/site/sprite@2x.png")
        @import "site/sprite"
        @import "bower_components/cssowl/lib/sass/cssowl"
        .example-coords
          +cssowl-coords(20px false false 20px)

    %ul.nav.nav-tabs
      %li.active
        = link_to 'HTML', '#example-cssowl-coords-html'
      %li.htmltab
        = link_to 'CSS', '#example-cssowl-coords-css'
      %li
        = link_to 'SASS', '#example-cssowl-coords-sass'
      %li
        = link_to 'SCSS', '#example-cssowl-coords-scss'
      %li
        = link_to 'LESS', '#example-cssowl-coords-less'
      %li
        = link_to 'Stylus', '#example-cssowl-coords-styl'

    .tab-content
      #example-cssowl-coords-html.tab-pane.active
        = preserve do
          -code("html") do
            .wrapper{style:"position:relative;width:50px;height:50px;border:1px solid #59371f;"}
              .example-coords{style: "width:10px;height:10px;background:#59371f;position:absolute;"}
      #example-cssowl-coords-css.tab-pane
        = preserve do
          -code("css") do
            :sass
              @import "bower_components/cssowl/lib/sass/cssowl"
              @import "source/assets/css/site/sprite"
              .example-coords
                +cssowl-coords(20px false false 20px)
      #example-cssowl-coords-sass.tab-pane
        = preserve do
          -code("sass") do
            :plain
              .example-coords
                +cssowl-coords(20px false false 20px)
      #example-cssowl-coords-scss.tab-pane
        = preserve do
          -code("scss") do
            :plain
              .example-coords {
                @include cssowl-coords(20px false false 20px);
              }
      #example-cssowl-coords-less.tab-pane
        = preserve do
          -code("scss") do
            :plain
              .example-coords {
                .cssowl-coords(20px false false 20px);
              }
      #example-cssowl-coords-styl.tab-pane
        = preserve do
          -code("sass") do
            :plain
              .example-coords
                cssowl-coords(20px false false 20px)
